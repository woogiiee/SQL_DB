-- 문법순서
SELECT
FROM
WHERE
GROUP BY
HAVING
ORDER BY

--실행순서
SELECT  --5
FROM   --1
WHERE  --2
GROUP BY --3
HAVING  --4
ORDER BY --6



SELECT * FROM EMP, DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO;

--각 사원이 소속된 부서의 이름을 뽑아내시오.
SELECT EMP.ENAME, DEPT.DNAME FROM EMP, DEPT WHERE EMP.DEPTNO=DEPT.DEPTNO;
SELECT ENAME, DNAME FROM EMP, DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO;
--엘리엇 선언 AS생략 가능
SELECT ENAME, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;

--EQUI JOIN
--조인 대상이 되는 두 테이블에서 공통적으로 존재하는 컬럼의 값이 일치되는 행을 연결하여 결과를 생성하는 조인 기법이다.

--NON EQUI JOIN(비등가 조인)
SELECT * FROM EMP, SALGRADE;

--각 사원의 급여가 몇 등급인지 살펴보는 쿼리문
SELECT ENAME, SAL, GRADE FROM EMP, SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL ORDER BY ENAME;
--한 명의 사원 이름과 소속 부서명, 급여의 등급을 출력하는 쿼리문
SELECT ENAME, SAL, GRADE, DEPT.DEPTNO
FROM EMP, SALGRADE, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO AND (SAL BETWEEN LOSAL AND HISAL);
--이름이 SMITH인 사원의 매니저 이름
SELECT EMPLOYEE.ENAME||'의 매니저는' ||MANAGER.ENAME||'입니다.'
FROM EMP EMPLOYEE, EMP MANAGER
WHERE EMPLOYEE.MGR = MANAGER.EMPNO;

--OUTER JOIN(외부 조인)
SELECT EMP.ENAME, DEPT.DNAME FROM EMP, DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO(+);
--조인 조건에 만족하지 못하였더라도 해당 로우를 나타내고 싶을 떄 OUTER JOIN을 사용한다.
SELECT EMP.ENAME, DEPT.DNAME FROM EMP, DEPT WHERE EMP.DEPTNO(+) = DEPT.DEPTNO;

--ANSI SQL
SELECT ENAME, DNAME FROM EMP LEFT OUTER JOIN DEPT ON EMP.DEPTNO = DEPT.DEPTNO;--OUTER 생략가능, 문장 기준으로 왼쪽, 잘 안씀


--사원들의 이름, 부서번호, 부서이름 출력
SELECT E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;
--'DALLAS'에서 근무하는 사원의 이름, 직위, 부서번호, 부서이름 출력
SELECT E.ENAME, E.JOB, E.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND D.LOC ='DALLAS'
--이름에 'A'가 들어가는 사람들의 이름과 부서이름 출력
SELECT E.ENAME, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND ENAME LIKE '%A%'

--사원이름과 그 사원이 속한 부서의 부서명, 그리고 월급을 출력하는데 월급이 3000이상인 사원 출력
SELECT E.ENAME, D.DNAME, E.SAL
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND SAL>=3000;
--커미션이 책정된 사원들의 사원번호, 이름, 연봉, 연봉+커미션,급여등급을 출력하되,
--각 컬럼명을 사원번호, 사원이름, 실급여. 급여등급으로 하여 출력
SELECT E.EMPNO 사원번호, E.ENAME 사원이름, E.SAL*12 연봉, (E.SAL*12)+E.COMM 실급여, S.GRADE 급여등급
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL AND E.COMM>0;

SELECT * FROM EMP,SALGRADE;
SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT COMM FROM EMP;

--EMP 테이블에서 부서 인원이 4명보다 많은 부서의 부서번호, 인원수, 급여의 합 출력
SELECT DEPTNO,COUNT(DEPTNO), SUM(SAL) 
FROM EMP
GROUP BY DEPTNO
HAVING COUNT(DEPTNO)>4;

--각 사원별 커미션이 0 또는 NULL이고 부서위치가 'GO'로 끝나는 사원의 정보를 
-- 사원번호, 사원이름, 커미션, 부서번호, 부서명, 부서위치 출력
-- 단, 보너스가 NULL이면 0으로 출력
SELECT E.EMPNO, E.ENAME, NVL(E.COMM,0), E.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE D.DEPTNO = E.DEPTNO AND (E.COMM is null OR E.COMM=0) AND D.LOC LIKE '%GO';
--다운님 답
SELECT E.EMPNO, E.ENAME, NVL(E.COMM,0) AS COMM, E.DEPTNO,D.DNAME, D.LOC
FROM EMP E , DEPT D
WHERE E.DEPTNO=D.DEPTNO AND NVL(COMM,0)=0 AND D.LOC LIKE '%GO';


--1981년 6월 1일~1981년 12월 31일 입사자 중 부서명이 SALES인 사원의 부서번호, 사원명,
--직업, 입사일을 출력 (단, 입사일 오름차순 정렬)
SELECT E.DEPTNO, E.ENAME, E.JOB, E.HIREDATE
FROM EMP